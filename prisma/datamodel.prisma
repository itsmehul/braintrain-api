type User {
  id: ID! @unique
    createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  email: String! @unique
  fid: String!
  role: UserRole
  description: String
  profession: String  
  teacherIn: [Classroom!] @relation(name:"TeacherInClassroom")
  studentIn: [Classroom!] @relation(name:"StudentInClassroom")
}

enum UserRole {
  TEACHER,
  STUDENT,
  ADMIN
}

type Classroom {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  teacher: User! @relation(name:"TeacherInClassroom")
  description: String
  rating: Int
  learning: String
  language: String
  requirments: String
  objectives: String
  batches: [Batch!]
}

type Batch{
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
    lectures: [Lecture!]
  teacher: User! @relation(name:"TeacherInBatch")
  students: [User!] @relation(name:"StudentInBatch")
  classroom:Classroom
  name: String!
  description: String!
  startsFrom: DateTime
  fee: Float
}

type Lecture {
  id: ID! @unique
  name: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  liveAt: DateTime!
  endAt: DateTime!
  teacher:User @relation(name:"TeacherInLecture")
  students: [User!] @relation(name:"StudentInLecture")
  batch: Batch
  classroom:Classroom
}